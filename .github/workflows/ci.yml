name: CI

env:
  JAVA_OPTS: "-Dfile.encoding=UTF-8 -Xms1024M -Xmx3072M -Xss4M -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler"

on:
  push:
    branches: '*'
    tags: [ "v[0-9]+*" ]
  pull_request:
    types: [opened]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scala: [2.12.12, 2.13.3]
        command: [udash-jvm/test, udash-js/test]
        include:
          - scala: 2.13.3
            command: guide-selenium/test
    steps:
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
            ~/.cache/coursier
          key: ${{ runner.os }}-${{ matrix.scala }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/Dependencies.scala') }}
          restore-keys: ${{ runner.os }}-${{ matrix.scala }}-sbt-
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup node
        uses: actions/setup-node@v2-beta
      - name: Install jsdom
        run: npm install jsdom@15.2.1
      - name: Run tests
        run: sbt "set concurrentRestrictions in Global += Tags.limit(ScalaJSTags.Link, 1)" ++${{ matrix.scala }} ${{ matrix.command }}

  publish:
    name: Publish to Sonatype
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v'))
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
            ~/.cache/coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/Dependencies.scala') }}
          restore-keys: ${{ runner.os }}-sbt-
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Get version
        id: get_tag_name
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      - name: Import GPG key
        env:
          #exported via gpg -a --export-secret-keys <key> | cat -e | sed 's/\$/\\n/g' | xclip -selection clipboard and added to org secrets
          SONATYPE_GPG: ${{ secrets.SONATYPE_GPG }}
        run: echo -e $SONATYPE_GPG | gpg --import -
      - name: Publish artifacts
        run: sbt 'set version := "${{ steps.get_tag_name.outputs.VERSION }}"' +publishSigned sonatypeBundleRelease