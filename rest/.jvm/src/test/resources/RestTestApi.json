{
  "openapi": "3.0.2",
  "info": {
    "title": "Test API",
    "version": "0.1",
    "description": "Some test REST API"
  },
  "paths": {
    "/": {
      "put": {
        "operationId": "singleBodyPut",
        "requestBody": {
          "description": "Serious body",
          "content": {
            "application/json": {
              "schema": {
                "description": "REST entity description",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RestEntity"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Serious response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/binaryEcho": {
      "post": {
        "operationId": "binaryEcho",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/complexParams": {
      "put": {
        "operationId": "put_complexParams",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flatBaseEntity": {
                    "$ref": "#/components/schemas/FlatBaseEntity"
                  },
                  "baseEntity": {
                    "nullable": true,
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BaseEntity"
                      }
                    ],
                    "default": null
                  }
                },
                "required": [
                  "flatBaseEntity"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      },
      "post": {
        "operationId": "complexParams",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "baseEntity": {
                    "$ref": "#/components/schemas/BaseEntity"
                  },
                  "flatBaseEntity": {
                    "nullable": true,
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/FlatBaseEntity"
                      }
                    ],
                    "default": null
                  }
                },
                "required": [
                  "baseEntity"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/customResponse": {
      "post": {
        "operationId": "customResponse",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom response",
            "headers": {
              "X-Value": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/failingGet": {
      "get": {
        "operationId": "failingGet",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/formPost": {
      "post": {
        "operationId": "formPost",
        "parameters": [
          {
            "name": "q1",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "p1": {
                    "type": "string"
                  },
                  "p2": {
                    "type": "integer",
                    "format": "int32",
                    "default": 42
                  }
                },
                "required": [
                  "p1"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/getEntity": {
      "get": {
        "operationId": "getEntity",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/RestEntityId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestEntity"
                }
              }
            }
          }
        }
      }
    },
    "/moreFailingGet": {
      "get": {
        "operationId": "moreFailingGet",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/multi/param/{p1}/p1/{p2}": {
      "description": "path with a followed by b",
      "get": {
        "description": "A really complex GET operation",
        "operationId": "complexGet",
        "parameters": [
          {
            "name": "p1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "p2",
            "in": "path",
            "description": "Very serious path parameter",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stri"
            }
          },
          {
            "name": "X-H1",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-H2",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q1",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "q=2",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "q2def"
            }
          },
          {
            "name": "c1",
            "in": "cookie",
            "required": true,
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "coo",
            "in": "cookie",
            "required": true,
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestEntity"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "multiParamPost",
        "parameters": [
          {
            "name": "p1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "p2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-H1",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-H2",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q1",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "q=2",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "b1": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "b\"2": {
                    "type": "string",
                    "description": "weird body field"
                  }
                },
                "required": [
                  "b1",
                  "b\"2"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestEntity"
                }
              }
            }
          }
        }
      }
    },
    "/neverGet": {
      "get": {
        "operationId": "neverGet",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/prefix/{p0}/subget/{p1}": {
      "summary": "summary for prefix paths",
      "get": {
        "operationId": "prefix_subget",
        "parameters": [
          {
            "name": "p0",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-H0",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q0",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "q0example"
          },
          {
            "name": "p1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-H1",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "q1",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subget/{p1}": {
      "get": {
        "operationId": "transparentPrefix_subget",
        "parameters": [
          {
            "name": "p1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-H1",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "q1",
            "in": "query",
            "required": true,
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/thirdPartyBody": {
      "post": {
        "operationId": "thirdPartyBody",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HasThirdParty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HasThirdParty"
                }
              }
            }
          }
        }
      }
    },
    "/trivialGet": {
      "get": {
        "operationId": "trivialGet",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/wrappedBinaryEcho": {
      "post": {
        "operationId": "wrappedBinaryEcho",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/Bytes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/Bytes"
                }
              }
            }
          }
        }
      }
    },
    "/wrappedBody": {
      "post": {
        "operationId": "wrappedBody",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestEntityId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestEntityId"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "components": {
    "schemas": {
      "BaseEntity": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "RestEntity": {
                "$ref": "#/components/schemas/RestEntity"
              }
            },
            "required": [
              "RestEntity"
            ]
          },
          {
            "type": "object",
            "properties": {
              "RestOtherEntity": {
                "type": "object",
                "properties": {
                  "fuu": {
                    "type": "boolean"
                  },
                  "kek": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "fuu",
                  "kek"
                ]
              }
            },
            "required": [
              "RestOtherEntity"
            ]
          },
          {
            "type": "object",
            "properties": {
              "SingletonEntity": {
                "type": "object"
              }
            },
            "required": [
              "SingletonEntity"
            ]
          }
        ]
      },
      "Bytes": {
        "type": "string",
        "format": "binary",
        "description": "binary bytes"
      },
      "FlatBaseEntity": {
        "type": "object",
        "description": "Flat sealed entity with some serious cases",
        "oneOf": [
          {
            "$ref": "#/components/schemas/taggedRestEntity"
          },
          {
            "$ref": "#/components/schemas/RestOtherEntity"
          },
          {
            "$ref": "#/components/schemas/SingletonEntity"
          }
        ],
        "discriminator": {
          "propertyName": "_case",
          "mapping": {
            "RestEntity": "#/components/schemas/taggedRestEntity",
            "RestOtherEntity": "#/components/schemas/RestOtherEntity",
            "SingletonEntity": "#/components/schemas/SingletonEntity"
          }
        }
      },
      "HasThirdParty": {
        "type": "object",
        "properties": {
          "dur": {
            "$ref": "#/components/schemas/ThirdParty"
          }
        },
        "required": [
          "dur"
        ]
      },
      "RestEntity": {
        "type": "object",
        "description": "REST entity",
        "properties": {
          "id": {
            "description": "entity id",
            "allOf": [
              {
                "$ref": "#/components/schemas/RestEntityId"
              }
            ]
          },
          "name": {
            "type": "string",
            "default": "anonymous"
          },
          "subentity": {
            "description": "recursive optional subentity",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/RestEntity"
              }
            ],
            "default": null
          }
        },
        "required": [
          "id"
        ]
      },
      "RestEntityId": {
        "type": "string",
        "description": "Entity identifier"
      },
      "RestOtherEntity": {
        "type": "object",
        "properties": {
          "_case": {
            "type": "string",
            "enum": [
              "RestOtherEntity"
            ]
          },
          "fuu": {
            "type": "boolean"
          },
          "kek": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "_case",
          "fuu",
          "kek"
        ]
      },
      "SingletonEntity": {
        "type": "object",
        "properties": {
          "_case": {
            "type": "string",
            "enum": [
              "SingletonEntity"
            ]
          }
        },
        "required": [
          "_case"
        ]
      },
      "ThirdParty": {
        "type": "object",
        "properties": {
          "thing": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "thing"
        ]
      },
      "taggedRestEntity": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_case": {
                "type": "string",
                "enum": [
                  "RestEntity"
                ]
              }
            },
            "required": [
              "_case"
            ]
          },
          {
            "$ref": "#/components/schemas/RestEntity"
          }
        ]
      }
    }
  }
}